=== /opt/odoo17/custom_addons/pw_pos_salesperson/report/pos_order_report.py ===
# -*- coding: utf-8 -*-
from odoo import models, fields


class PosOrderReport(models.Model):
    _inherit = "report.pos.order"

    saleperson_id = fields.Many2one('res.users', string='Salesperson', readonly=True)

    def _select(self):
        return super(PosOrderReport, self)._select() + ',l.user_id AS saleperson_id'

    def _group_by(self):
        return super(PosOrderReport, self)._group_by() + ',l.user_id'
=== /opt/odoo17/custom_addons/pw_pos_salesperson/report/__init__.py ===
# -*- coding: utf-8 -*-
from . import pos_order_report
=== /opt/odoo17/custom_addons/pw_pos_salesperson/static/src/js/Orderline.js ===
odoo.define('pw_pos_salesperson.Orderline', function (require) {
    'use strict';

    const Orderline = require('point_of_sale.Orderline');
    const Registries = require('point_of_sale.Registries');

    const ResetSalesperson = (Orderline) =>
        class extends Orderline {
            removeUser() {
                this.props.line.remove_sale_person()
            }
            setUser() {
                this.updateSalesperson(this.props.line);
            }
            async updateSalesperson(line) {
                const selectionList = this.env.pos.users.map(user => ({
                    id: user.id,
                    label: user.name,
                    item: user,
                }));

                const { confirmed, payload: selectedUser } = await this.showPopup(
                    'SelectionPopup',
                    {
                        title: this.env._t('Select Salesperson'),
                        list: selectionList,
                    }
                );

                if (!confirmed) return false;

                if (confirmed) {
                    line.set_line_user(selectedUser);
                }
            }
        };

    Registries.Component.extend(Orderline, ResetSalesperson);
    return ResetSalesperson;
});
=== /opt/odoo17/custom_addons/pw_pos_salesperson/static/src/js/SalespersonButton.js ===
odoo.define('pos_salesperson.SalespersonButton', function(require) {
    'use strict';

    const PosComponent = require('point_of_sale.PosComponent');
    const ProductScreen = require('point_of_sale.ProductScreen');
    const { useListener } = require('web.custom_hooks');
    const Registries = require('point_of_sale.Registries');

    class SalespersonButton extends PosComponent {
        constructor() {
            super(...arguments);
            useListener('click', this.onClick);
        }
        async onClick() {
            const selectionList = this.env.pos.users.map(user => ({
                id: user.id,
                label: user.name,
                item: user,
            }));

            const { confirmed, payload: selectedUser } = await this.showPopup(
                'SelectionPopup',
                {
                    title: this.env._t('Select Salesperson'),
                    list: selectionList,
                }
            );

            if (!confirmed) return false;

            if (confirmed) {
                var order = this.env.pos.get_order();
                var orderlines = order.get_orderlines();
                for(var i = 0; i < orderlines.length; i++){
                    if(orderlines[i] != undefined){
                        orderlines[i].set_line_user(selectedUser);
                    }
                }
            }
        }
    }
    SalespersonButton.template = 'SalespersonButton';
    ProductScreen.addControlButton({
        component: SalespersonButton,
        condition: function() {
            return this.env.pos.config.allow_salesperson;;
        },
    });
    Registries.Component.add(SalespersonButton);
    return SalespersonButton;
});
=== /opt/odoo17/custom_addons/pw_pos_salesperson/static/src/js/models.js ===
odoo.define('pos_salesperson.models', function(require){
    'use strict';
	var models = require('point_of_sale.models');
	var core = require('web.core');
	var _t = core._t;
    //
    var _super_Orderline = models.Orderline.prototype;
    models.Orderline = models.Orderline.extend({
        init_from_JSON: function (json) {
            var self = this;
            if (json.user_id) {
                var user = this.get_user_by_id(json.user_id);
                if (user) {
                    this.set_line_user(user);
                }
            }
            return _super_Orderline.init_from_JSON.apply(this, arguments);
        },
        //
        export_as_JSON: function () {
            var json = _super_Orderline.export_as_JSON.apply(this, arguments);
            if (this.user_id) {
                json.user_id = this.user_id.id;
            }
            return json;
        },
        //
        get_user_image_url: function () {
            if (this.user_id && this.user_id.id !== undefined) {
                return window.location.origin + '/web/image?model=res.users&field=image_128&id=' + this.user_id.id;
            }
            return null;
        },
        //
        get_user_by_id: function (user_id) {
            var self = this;
            var user = null;
            for (var i = 0; i < self.pos.users.length; i++) {
                if (self.pos.users[i].id == user_id) {
                    user = self.pos.users[i];
                }
            }
            return user;
        },
        //
        get_line_user: function () {
            if (this.user_id && this.user_id.id !== undefined) {
                return this.user_id;
            }
            return null;
        },
        //
        set_line_user: function (user) {
            this.user_id = user;
            this.trigger('change', this);
        },
        //
        remove_sale_person: function () {
            this.user_id = null;
            this.trigger('change', this);
        },
    });
});
=== /opt/odoo17/custom_addons/pw_pos_salesperson/static/src/xml/pos.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">
    <t t-name="SalespersonButton" owl="1">
       <span class="control-button">
           <i class="fa fa-user"></i>Salesperson
        </span>
    </t>
    <t t-name="Orderline" t-inherit="point_of_sale.Orderline" t-inherit-mode="extension" owl="1">
        <xpath expr="//t[@t-esc='props.line.get_unit().name']" position="after">
            <t t-if="env.pos.config.allow_salesperson">
                <t t-if="props.line.get_line_user()">
                    <span style="float: right;color:green;font-style: italic;cursor: pointer;">
                        <t t-if="props.line.get_user_image_url()">
                            <img t-att-src="props.line.get_user_image_url()" style="width: 25px;height: 25px;border-radius: 16px;vertical-align: middle;}" class="sale_person" t-on-click="setUser"/>
                        </t>
                        <t t-esc="props.line.get_line_user().name" class="sale_person"/>
                        <i class="fa fa-times remove_person" style="color:red;vertical-align: middle;" t-on-click="removeUser"/>
                    </span>
                </t>
                <t t-if="!props.line.get_line_user()">
                    <span style="float: right;">
                        <i t-attf-class="fa fa-user-plus sale_person" style="color:orange" t-on-click="setUser"/>
                    </span>
                </t>
            </t>
        </xpath>
    </t>
<!--
    <t t-extend="Orderline">
        <t t-jquery="li[class*='info']:first" t-operation="append">
            <t t-if="widget.pos.config.allow_salesperson">
                <t t-if="line.get_line_user()">
                    <span style="float: right;color:green;font-style: italic;cursor: pointer;">
                        <t t-if="line.get_user_image_url()">
                            <img t-att-src="line.get_user_image_url()" style="width: 25px;height: 25px;border-radius: 16px;vertical-align: middle;}" class="sale_person"/>
                        </t>
                        <t t-esc="line.get_line_user().name" class="sale_person"/>
                        <i class="fa fa-times remove_person" style="color:red;vertical-align: middle;"/>
                    </span>
                </t>
                <t t-if="!line.get_line_user()">
                    <span style="float: right;">
                        <i t-attf-class="fa fa-user-plus sale_person" style="color:orange"/>
                    </span>
                </t>
            </t>
        </t>
    </t> -->
</templates>=== /opt/odoo17/custom_addons/pw_pos_salesperson/views/pos_config_view.xml ===
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="pos_config_view_form_inherit_pos_salesperson" model="ir.ui.view"> 
        <field name="name">pos.config.form.inherit.pos.salesperson</field>
        <field name="model">pos.config</field>
        <field name="inherit_id" ref="point_of_sale.pos_config_view_form"/>
        <field name="arch" type="xml">
            <div id="category_reference" position="after">
                <div class="col-xs-12 col-md-6 o_setting_box">
                    <div class="o_setting_left_pane">
                        <field name='allow_salesperson'/>
                    </div>
                    <div class="o_setting_right_pane">
                        <label for="allow_salesperson"/>
                        <div class="text-muted">
                            Set salesperson on pos orderline
                        </div>
                    </div>
                </div>
            </div>
        </field>
    </record>
    <record id="view_pos_pos_form_inherit_pos_salesperson" model="ir.ui.view">
        <field name="name">pos.order.view.form.inherit.pos.saleperson</field>
        <field name="model">pos.order</field>
        <field name="inherit_id" ref="point_of_sale.view_pos_pos_form"/>
        <field name="arch" type="xml">
            <xpath expr="//field[@name='lines']/tree/field[@name='full_product_name']" position="after">
                <field name="user_id" string="Saleperson"/>
            </xpath>
        </field>
    </record>
    <record id="view_report_pos_order_search_inherit_pwsales" model="ir.ui.view">
        <field name="name">report.pos.order.search.form.inherit.pos.saleperson</field>
        <field name="model">report.pos.order</field>
        <field name="inherit_id" ref="point_of_sale.view_report_pos_order_search"/>
        <field name="arch" type="xml">
            <field name="product_categ_id" position="after">
                <field name="saleperson_id"/>
            </field>
            <xpath expr="//filter[@name='product_category']" position='after'>
                <filter string="Salesperson" name="saleperson_id" context="{'group_by':'saleperson_id'}"/>
            </xpath>
        </field>
    </record>
</odoo>
=== /opt/odoo17/custom_addons/pw_pos_salesperson/models/pos_order.py ===
# -*- coding: utf-8 -*-
from odoo import api, fields, models, _


class PosOrderLine(models.Model):
    _inherit = 'pos.order.line'

    user_id = fields.Many2one('res.users', string='Salesperson')
=== /opt/odoo17/custom_addons/pw_pos_salesperson/models/pos_config.py ===
# -*- coding: utf-8 -*-
from odoo import api, fields, models, _


class PosConfig(models.Model):
    _inherit = 'pos.config'

    allow_salesperson = fields.Boolean('Allow Salesperson')
=== /opt/odoo17/custom_addons/pw_pos_salesperson/models/__init__.py ===
# -*- coding: utf-8 -*-

from . import pos_config
from . import pos_order
=== /opt/odoo17/custom_addons/pw_pos_salesperson/__manifest__.py ===
# -*- coding: utf-8 -*-
{
    'name': 'POS Salesperson',
    'version': '15.0',
    'author': 'Preway IT Solutions',
    'category': 'Point of Sale',
    'depends': ['point_of_sale'],
    'summary': 'This apps helps you set salesperson on pos orderline from pos interface | POS Orderline User | Assign Sales Person on POS | POS Sales Person',
    'description': """
- Odoo POS Orderline user
- Odoo POS Orderline salesperson
- Odoo POS Salesperson
- Odoo POS Item Salesperson
- Odoo POS Item User
- Odoo POS product salesperson
    """,
    'data': [
        'views/pos_config_view.xml',
    ],
    'assets': {
        'point_of_sale.assets': [
            'pw_pos_salesperson/static/src/js/models.js',
            'pw_pos_salesperson/static/src/js/SalespersonButton.js',
            'pw_pos_salesperson/static/src/js/Orderline.js',
        ],
        'web.assets_qweb': [
            'pw_pos_salesperson/static/src/xml/**/*',
        ],
    },
    'qweb': ['static/src/xml/pos.xml'],
    'price': 20.0,
    'currency': "EUR",
    'application': True,
    'installable': True,
    "license": "LGPL-3",
    'live_test_url': 'https://youtu.be/xnM8rchcD2o',
    "images":["static/description/Banner.png"],
}
=== /opt/odoo17/custom_addons/pw_pos_salesperson/__init__.py ===
# -*- coding: utf-8 -*-

from . import models
from . import report
